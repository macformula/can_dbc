/*
 * canal_messages.h
 * TMS
 *
 *  WARNING: DO NOT EDIT. THIS WAS AN AUTOGENERATED FILE.
 *
 *  Created on: 2023/7/22
 *     Authors: Samuel Parent, Dharak Verma
 *
 *                    ..::^~~~!!~~~^^:..
 *                .:^!7??JJJJJJJJJJJJ??7!~:.
 *              :~7?JJJ???????????????JJJJ??!^.
 *           .^7?JJJ???JJJJJJ??????????????JJJ?~:
 *          ^7JJ???????777777???JJJJJJJ???????JJ?~.
 *        .!JJ???????????7!~^::::^~!!7??JJ???????J7:
 *       :7JJJ??????????JJJJ??7~:    ..:~7?J??????J?^
 *      .7J???????????????????JJ?!.       :7J??????J?^
 *     .~J??????????????????JJJJ?!.       .7J???????J7.
 *     :?J?????????????JJJJ??7!^.      .:~???????????J~
 *     ^???????????JJJ??7~^:..      .:~7?JJ??????????J!.
 *     ^????????JJ?7~^:.        .:~!?JJJ?????????????J!.
 *     ^????????!^.          .:~7?JJJ????????????????J!.
 *     .7J????!.            :7?JJ?????????????????????^
 *      ~JJ?J7.             ~JJJJ???????????????????J!.
 *      .!J???^.            .^!7?JJJJJJ????????????J7:
 *       .!?J??7^.              .:^~!7???JJJJJ????J7:
 *        .^?JJJJ?7~.                 ..:^~~!7????!.
 *          .!?JJJJ?:                         ..::
 *            :~??!:
 *              ..
 */

#ifndef INC_CANAL_TMS_MESSAGES_H_
#define INC_CANAL_TMS_MESSAGES_H_

 /*********************************************************
 *                      INCLUDES
 *********************************************************/
#include <stdio.h>
#include <stdint.h>
#include <string.h>
#include "canal_types.h"

/*********************************************************
*                        ENUMS
*********************************************************/

typedef enum {
    UNKNOWN_CANAL_ID =                    ((uint32_t) 0x000),
    BMSBROADCAST_CANAL_ID =               ((uint32_t) 0x1839f380),
    THERMISTORBROADCAST_CANAL_ID =        ((uint32_t) 0x18fef1fe),
} TeMessageID;

/*********************************************************
*                     MESSAGE STRUCTS
*********************************************************/
/** 
 * Message: BMSBroadcast
 * Senders: ['TMS']
 * Receivers: ['BMS']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct BMSBroadcast {    
    // Unit: None
    uint8_t ThermModuleNum;    
    // Unit:  C
    int8_t LowThermValue;    
    // Unit:  C
    int8_t HighThermValue;    
    // Unit:  C
    int8_t AvgThermValue;    
    // Unit: None
    uint8_t NumThermEn;    
    // Unit: None
    uint8_t HighThermID;    
    // Unit: None
    uint8_t LowThermID;    
    // Unit: None
    int8_t Checksum;
}TsBMSBroadcast;

/** 
 * Message: ThermistorBroadcast
 * Senders: ['TMS']
 * Receivers: ['BMS']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct ThermistorBroadcast {    
    // Unit: None
    uint16_t RelThermID;    
    // Unit:  C
    int8_t ThermValue;    
    // Unit: None
    int8_t NumEnTherm;    
    // Unit:  C
    int8_t LowThermValue;    
    // Unit:  C
    int8_t HighThermValue;    
    // Unit: None
    uint8_t HighThermID;    
    // Unit: None
    uint8_t LowThermID;
}TsThermistorBroadcast;


/*********************************************************
*                       MESSAGE MACROS
*********************************************************/
#define NUM_RX_MESSAGES    (0)
#define NUM_TX_MESSAGES    (2)
#define TOTAL_MESSAGES     (2)

#define BMSBROADCAST_DATA_LENGTH               (8)
#define THERMISTORBROADCAST_DATA_LENGTH        (8)
/*********************************************************
*                       SIGNAL MACROS
*********************************************************/
// Message: BMSBroadcast

// Signal: ThermModuleNum
#define BMSBROADCAST_THERMMODULENUM_START    (0)
#define BMSBROADCAST_THERMMODULENUM_LENGTH   (8)
#define BMSBROADCAST_THERMMODULENUM_FACTOR   (0)
#define BMSBROADCAST_THERMMODULENUM_OFFSET   (0)

// Signal: LowThermValue
#define BMSBROADCAST_LOWTHERMVALUE_START    (8)
#define BMSBROADCAST_LOWTHERMVALUE_LENGTH   (8)
#define BMSBROADCAST_LOWTHERMVALUE_FACTOR   (0)
#define BMSBROADCAST_LOWTHERMVALUE_OFFSET   (0)

// Signal: HighThermValue
#define BMSBROADCAST_HIGHTHERMVALUE_START    (16)
#define BMSBROADCAST_HIGHTHERMVALUE_LENGTH   (8)
#define BMSBROADCAST_HIGHTHERMVALUE_FACTOR   (0)
#define BMSBROADCAST_HIGHTHERMVALUE_OFFSET   (0)

// Signal: AvgThermValue
#define BMSBROADCAST_AVGTHERMVALUE_START    (24)
#define BMSBROADCAST_AVGTHERMVALUE_LENGTH   (8)
#define BMSBROADCAST_AVGTHERMVALUE_FACTOR   (0)
#define BMSBROADCAST_AVGTHERMVALUE_OFFSET   (0)

// Signal: NumThermEn
#define BMSBROADCAST_NUMTHERMEN_START    (32)
#define BMSBROADCAST_NUMTHERMEN_LENGTH   (8)
#define BMSBROADCAST_NUMTHERMEN_FACTOR   (0)
#define BMSBROADCAST_NUMTHERMEN_OFFSET   (0)

// Signal: HighThermID
#define BMSBROADCAST_HIGHTHERMID_START    (40)
#define BMSBROADCAST_HIGHTHERMID_LENGTH   (8)
#define BMSBROADCAST_HIGHTHERMID_FACTOR   (0)
#define BMSBROADCAST_HIGHTHERMID_OFFSET   (0)

// Signal: LowThermID
#define BMSBROADCAST_LOWTHERMID_START    (48)
#define BMSBROADCAST_LOWTHERMID_LENGTH   (8)
#define BMSBROADCAST_LOWTHERMID_FACTOR   (0)
#define BMSBROADCAST_LOWTHERMID_OFFSET   (0)

// Signal: Checksum
#define BMSBROADCAST_CHECKSUM_START    (56)
#define BMSBROADCAST_CHECKSUM_LENGTH   (8)
#define BMSBROADCAST_CHECKSUM_FACTOR   (0)
#define BMSBROADCAST_CHECKSUM_OFFSET   (0)

// Message: ThermistorBroadcast

// Signal: RelThermID
#define THERMISTORBROADCAST_RELTHERMID_START    (0)
#define THERMISTORBROADCAST_RELTHERMID_LENGTH   (16)
#define THERMISTORBROADCAST_RELTHERMID_FACTOR   (0)
#define THERMISTORBROADCAST_RELTHERMID_OFFSET   (0)

// Signal: ThermValue
#define THERMISTORBROADCAST_THERMVALUE_START    (16)
#define THERMISTORBROADCAST_THERMVALUE_LENGTH   (8)
#define THERMISTORBROADCAST_THERMVALUE_FACTOR   (0)
#define THERMISTORBROADCAST_THERMVALUE_OFFSET   (0)

// Signal: NumEnTherm
#define THERMISTORBROADCAST_NUMENTHERM_START    (24)
#define THERMISTORBROADCAST_NUMENTHERM_LENGTH   (8)
#define THERMISTORBROADCAST_NUMENTHERM_FACTOR   (0)
#define THERMISTORBROADCAST_NUMENTHERM_OFFSET   (0)

// Signal: LowThermValue
#define THERMISTORBROADCAST_LOWTHERMVALUE_START    (32)
#define THERMISTORBROADCAST_LOWTHERMVALUE_LENGTH   (8)
#define THERMISTORBROADCAST_LOWTHERMVALUE_FACTOR   (0)
#define THERMISTORBROADCAST_LOWTHERMVALUE_OFFSET   (0)

// Signal: HighThermValue
#define THERMISTORBROADCAST_HIGHTHERMVALUE_START    (40)
#define THERMISTORBROADCAST_HIGHTHERMVALUE_LENGTH   (8)
#define THERMISTORBROADCAST_HIGHTHERMVALUE_FACTOR   (0)
#define THERMISTORBROADCAST_HIGHTHERMVALUE_OFFSET   (0)

// Signal: HighThermID
#define THERMISTORBROADCAST_HIGHTHERMID_START    (48)
#define THERMISTORBROADCAST_HIGHTHERMID_LENGTH   (8)
#define THERMISTORBROADCAST_HIGHTHERMID_FACTOR   (0)
#define THERMISTORBROADCAST_HIGHTHERMID_OFFSET   (0)

// Signal: LowThermID
#define THERMISTORBROADCAST_LOWTHERMID_START    (56)
#define THERMISTORBROADCAST_LOWTHERMID_LENGTH   (8)
#define THERMISTORBROADCAST_LOWTHERMID_FACTOR   (0)
#define THERMISTORBROADCAST_LOWTHERMID_OFFSET   (0)


/*********************************************************
*                 GLOBAL STRUCT DECLARATIONS
*********************************************************/
extern volatile TsBMSBroadcast               BMSBroadcast;
extern volatile TsThermistorBroadcast        ThermistorBroadcast;

/*********************************************************
*               PUBLIC FUNCTION DECLARATIONS
*********************************************************/
void Print_BMSBroadcast(void);
void Print_ThermistorBroadcast(void);

TeCanALRet Print_Message(uint32_t *ID);
TeCanALRet GetTxDataLength(TeMessageID *ID, uint32_t *dlc);
TeCanALRet MarshalBinary(TeMessageID *ID, uint8_t* rawData);
TeCanALRet UnmarshalBinary(uint32_t *ID, uint8_t* txData);

#endif /* INC_CANAL_TMS_MESSAGES_H_ */
